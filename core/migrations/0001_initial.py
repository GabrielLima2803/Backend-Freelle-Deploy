# Generated by Django 5.0.6 on 2024-12-08 23:38

import core.models.user
import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("uploader", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Categoria",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("nome", models.CharField(max_length=100, unique=True)),
                ("icon", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "Categoria",
                "verbose_name_plural": "Categorias",
            },
        ),
        migrations.CreateModel(
            name="Favorito",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_favorite", models.DateField(default=datetime.datetime.now)),
            ],
            options={
                "verbose_name": "Favorito",
                "verbose_name_plural": "Favoritos",
            },
        ),
        migrations.CreateModel(
            name="Formacao",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "nivel_academico",
                    models.CharField(
                        choices=[
                            ("fundamental", "Ensino Fundamental"),
                            ("medio", "Ensino Médio"),
                            ("graduacao", "Graduação"),
                            ("pos_graduacao", "Pós-Graduação"),
                            ("mestrado", "Mestrado"),
                            ("doutorado", "Doutorado"),
                        ],
                        max_length=50,
                        verbose_name="Nível Acadêmico",
                    ),
                ),
                ("escola_academica", models.CharField(max_length=255, verbose_name="Instituição de Ensino")),
            ],
            options={
                "verbose_name": "Formação",
                "verbose_name_plural": "Formações",
            },
        ),
        migrations.CreateModel(
            name="Nacionalidade",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("nome", models.CharField(max_length=100, unique=True)),
                ("sigla", models.CharField(max_length=3)),
            ],
            options={
                "verbose_name": "Nacionalidade",
                "verbose_name_plural": "Nacionalidades",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("biografia", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("linguagem_principal", models.CharField(blank=True, max_length=255, null=True)),
                ("especializacao", models.CharField(blank=True, max_length=255, null=True)),
                ("instagram", models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ("linkedin", models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ("isPro", models.BooleanField(default=False)),
                (
                    "passage_id",
                    models.CharField(default=core.models.user.generate_unique_passage_id, max_length=255, unique=True),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("total_pedidos", models.FloatField(default=0)),
                ("is_staff", models.BooleanField(default=False)),
                ("reset_code", models.CharField(blank=True, max_length=6, null=True)),
                ("rating", models.FloatField(default=0.0, verbose_name="Média de Avaliações")),
                ("total_avaliacoes", models.PositiveIntegerField(default=0, verbose_name="Total de Avaliações")),
                ("cnpj", models.CharField(blank=True, max_length=18, null=True, unique=True)),
                ("descricao", models.TextField(blank=True, null=True)),
                ("telefone", models.PositiveIntegerField()),
                ("is_empresa", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "favorito",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="core.favorito",
                    ),
                ),
                (
                    "formacao",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="core.formacao",
                    ),
                ),
                (
                    "nacionalidade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="core.nacionalidade",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
            },
            managers=[
                ("objects", core.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Projeto",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("titulo", models.CharField(max_length=80)),
                ("descricao", models.TextField()),
                (
                    "status",
                    models.IntegerField(choices=[(1, "Fechado"), (2, "Em andamento"), (3, "Finalizado")], default=2),
                ),
                ("preco", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("prazo_entrega", models.DateField()),
                ("proposta_recebida", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("orcamento", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("data_publicada", models.DateField(default=datetime.datetime.now)),
                ("isExpired", models.BooleanField(default=False)),
                ("isClosed", models.BooleanField(default=False)),
                ("max_candidates", models.PositiveIntegerField(default=1)),
                ("categoria", models.ManyToManyField(related_name="projetos", to="core.categoria")),
                (
                    "image_project",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="uploader.image",
                    ),
                ),
                (
                    "selected_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="selected_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Projeto",
                "verbose_name_plural": "Projetos",
            },
        ),
        migrations.CreateModel(
            name="Avaliacao",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "nota",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "1 Estrela(s)"),
                            (2, "2 Estrela(s)"),
                            (3, "3 Estrela(s)"),
                            (4, "4 Estrela(s)"),
                            (5, "5 Estrela(s)"),
                        ],
                        verbose_name="Nota",
                    ),
                ),
                ("comentario", models.TextField(blank=True, null=True)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                (
                    "avaliado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacoes_recebidas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "avaliador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacoes_feitas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação",
                "verbose_name_plural": "Avaliações",
                "unique_together": {("avaliador", "avaliado")},
            },
        ),
        migrations.CreateModel(
            name="UserProjeto",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "empresa_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="empresa_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "freelancer_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="freelancer_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "projeto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="user_projects", to="core.projeto"
                    ),
                ),
            ],
            options={
                "verbose_name": "User Projeto",
                "verbose_name_plural": "User Projetos",
                "unique_together": {("empresa_user", "freelancer_user", "projeto")},
            },
        ),
    ]
